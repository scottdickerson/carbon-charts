{"version":3,"file":"axis.js","sourceRoot":"","sources":["axis.ts"],"names":[],"mappings":"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","sourcesContent":["// Internal Imports\nimport { Component } from \"../component\";\nimport { AxisPositions, ScaleTypes, AxisTypes } from \"../../interfaces\";\nimport { Tools } from \"../../tools\";\nimport { ChartModel } from \"../../model\";\nimport { DOMUtils } from \"../../services\";\nconst englishLocale = require(\"d3-time-format/locale/en-US.json\");\n\n// D3 Imports\nimport { scaleBand, scaleLinear, scaleTime, scaleLog, scaleOrdinal } from \"d3-scale\";\nimport { axisBottom, axisLeft, axisRight, axisTop } from \"d3-axis\";\nimport { min, extent } from \"d3-array\";\nimport { timeFormatDefaultLocale } from \"d3-time-format\";\nimport moment from \"moment\";\n\n\nexport class Axis extends Component {\n\ttype = \"axes\";\n\n\tmargins: any;\n\n\tscale: any;\n\tscaleType: ScaleTypes;\n\n\tconstructor(model: ChartModel, services: any, configs?: any) {\n\t\tsuper(model, services, configs);\n\n\t\tif (configs) {\n\t\t\tthis.configs = configs;\n\t\t}\n\n\t\tthis.margins = this.configs.margins;\n\t}\n\n\tcreateOrGetScale() {\n\t\tconst { position } = this.configs;\n\t\tconst axisOptions = Tools.getProperty(this.model.getOptions(), \"axes\", position);\n\t\tthis.scaleType = (axisOptions && axisOptions.scaleType) ? axisOptions.scaleType : ScaleTypes.LINEAR;\n\n\t\tlet scaleFunction;\n\t\tif (this.scaleType === ScaleTypes.TIME) {\n\t\t\tscaleFunction = scaleTime();\n\t\t} else if (this.scaleType === ScaleTypes.LOG) {\n\t\t\tscaleFunction = scaleLog().base(axisOptions.base || 10);\n\t\t} else if (this.scaleType === ScaleTypes.LABELS) {\n\t\t\tscaleFunction = scaleBand();\n\t\t} else {\n\t\t\tscaleFunction = scaleLinear();\n\t\t}\n\n\t\t// If scale doesn't exist in the model, store it\n\t\tif (!this.model.get(position)) {\n\t\t\tconst modelUpdates = {\n\t\t\t\t[position]: this\n\t\t\t};\n\n\t\t\tif (axisOptions) {\n\t\t\t\tif (axisOptions.primary === true) {\n\t\t\t\t\tmodelUpdates[AxisTypes.PRIMARY] = this;\n\t\t\t\t}\n\n\t\t\t\tif (axisOptions.secondary === true) {\n\t\t\t\t\tmodelUpdates[AxisTypes.SECONDARY] = this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.model.set(modelUpdates, true);\n\t\t}\n\n\t\tthis.scale = scaleFunction;\n\n\t\treturn scaleFunction;\n\t}\n\n\tgetScale() {\n\t\treturn !this.scale ? this.createOrGetScale() : this.scale;\n\t}\n\n\tgetScaleDomain() {\n\t\tconst options = this.model.getOptions();\n\t\tconst { position } = this.configs;\n\t\tconst axisOptions = Tools.getProperty(options, \"axes\", position);\n\n\t\tconst { datasets, labels } = this.model.getDisplayData();\n\n\t\t// If scale is a LABELS scale, return some labels as the domain\n\t\tif (axisOptions && axisOptions.scaleType === ScaleTypes.LABELS) {\n\t\t\tif (labels) {\n\t\t\t\treturn labels;\n\t\t\t} else {\n\t\t\t\treturn this.model.getDisplayData().datasets[0].data.map((d, i) => i + 1);\n\t\t\t}\n\t\t}\n\n\t\t// Get the extent of the domain\n\t\tlet domain;\n\t\t// If the scale is stacked\n\t\tif (axisOptions.stacked) {\n\t\t\tdomain = extent(\n\t\t\t\tlabels.reduce((m, label: any, i) => {\n\t\t\t\t\tconst correspondingValues = datasets.map(dataset => {\n\t\t\t\t\t\treturn !isNaN(dataset.data[i]) ? dataset.data[i] : dataset.data[i].value;\n\t\t\t\t\t});\n\t\t\t\t\tconst totalValue = correspondingValues.reduce((a, b) => a + b, 0);\n\n\t\t\t\t\t// Save both the total value and the minimum\n\t\t\t\t\treturn m.concat(totalValue, min(correspondingValues));\n\t\t\t\t}, [])\n\t\t\t\t\t// Currently stack layouts in the library\n\t\t\t\t\t// Only support positive values\n\t\t\t\t\t.concat(0)\n\t\t\t);\n\t\t} else {\n\t\t\t// Get all the chart's data values in a flat array\n\t\t\tlet allDataValues = datasets.reduce((dataValues, dataset: any) => {\n\t\t\t\tdataset.data.forEach((datum: any) => {\n\t\t\t\t\tif (axisOptions.scaleType === ScaleTypes.TIME) {\n\t\t\t\t\t\tdataValues = dataValues.concat(datum.date);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataValues = dataValues.concat(isNaN(datum) ? datum.value : datum);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn dataValues;\n\t\t\t}, []);\n\n\t\t\tif (axisOptions.scaleType !== ScaleTypes.TIME) {\n\t\t\t\tallDataValues = allDataValues.concat(0);\n\t\t\t}\n\n\t\t\tdomain = extent(allDataValues);\n\t\t}\n\n\t\tif (axisOptions.scaleType === ScaleTypes.TIME) {\n\t\t\tif (Tools.getProperty(options, \"timeScale\", \"addSpaceOnEdges\")) {\n\t\t\t\tconst [startDate, endDate] = domain;\n\t\t\t\tconst startMoment = moment(startDate);\n\t\t\t\tconst endMoment = moment(endDate);\n\t\t\t\tif (endMoment.diff(startMoment, \"years\") > 3) {\n\t\t\t\t\tstartMoment.subtract(1, \"year\");\n\t\t\t\t\tendMoment.add(1, \"year\");\n\t\t\t\t}\n\t\t\t\tif (endMoment.diff(startMoment, \"months\") > 3) {\n\t\t\t\t\tstartMoment.subtract(1, \"month\");\n\t\t\t\t\tendMoment.add(1, \"month\");\n\t\t\t\t}\n\t\t\t\tif (endMoment.diff(startMoment, \"days\") > 3) {\n\t\t\t\t\tstartMoment.subtract(1, \"day\");\n\t\t\t\t\tendMoment.add(1, \"day\");\n\t\t\t\t} else if (endMoment.diff(startMoment, \"hours\") > 3) {\n\t\t\t\t\tstartMoment.subtract(1, \"hour\");\n\t\t\t\t\tendMoment.add(1, \"hour\");\n\t\t\t\t} else if (endMoment.diff(startMoment, \"minutes\") > 3) {\n\t\t\t\t\tstartMoment.subtract(1, \"minute\");\n\t\t\t\t\tendMoment.add(1, \"minute\");\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tstartMoment.toDate(),\n\t\t\t\t\tendMoment.toDate()\n\t\t\t\t];\n\t\t\t}\n\n\n\t\t}\n\n\t\t// TODO - Work with design to improve logic\n\t\tdomain[1] = domain[1] * 1.1;\n\t\treturn domain;\n\t}\n\n\trender(animate = true) {\n\t\tconst { position: axisPosition } = this.configs;\n\t\tconst options = this.model.getOptions();\n\t\tconst axisOptions = Tools.getProperty(options, \"axes\", axisPosition);\n\n\t\tconst svg = this.getContainerSVG();\n\t\tconst { width, height } = DOMUtils.getSVGElementSize(this.parent, { useAttrs: true });\n\n\t\tlet startPosition, endPosition;\n\t\tif (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {\n\t\t\tstartPosition = this.configs.axes[AxisPositions.LEFT] ? this.margins.left : 0;\n\t\t\tendPosition = this.configs.axes[AxisPositions.RIGHT] ? width - this.margins.right : width;\n\t\t} else {\n\t\t\tstartPosition = height - this.margins.bottom;\n\t\t\tendPosition = this.margins.top;\n\t\t}\n\n\t\t// Grab the scale off of the model, and initialize if it doesn't exist\n\t\tconst scale = this.createOrGetScale().domain(this.getScaleDomain());\n\n\t\tif (this.scaleType === ScaleTypes.LABELS) {\n\t\t\tscale.rangeRound([startPosition, endPosition]);\n\t\t} else {\n\t\t\tscale.range([startPosition, endPosition]);\n\t\t}\n\n\t\t// Identify the corresponding d3 axis function\n\t\tlet axisFunction;\n\t\tswitch (axisPosition) {\n\t\t\tcase AxisPositions.LEFT:\n\t\t\t\taxisFunction = axisLeft;\n\t\t\t\tbreak;\n\t\t\tcase AxisPositions.BOTTOM:\n\t\t\t\taxisFunction = axisBottom;\n\t\t\t\tbreak;\n\t\t\tcase AxisPositions.RIGHT:\n\t\t\t\taxisFunction = axisRight;\n\t\t\t\tbreak;\n\t\t\tcase AxisPositions.TOP:\n\t\t\t\taxisFunction = axisTop;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Set the date/time locale\n\t\tif (this.scaleType === ScaleTypes.TIME) {\n\t\t\tconst timeLocale = Tools.getProperty(options, \"locale\", \"time\");\n\t\t\tif (timeLocale) {\n\t\t\t\ttimeFormatDefaultLocale(timeLocale);\n\t\t\t} else {\n\t\t\t\ttimeFormatDefaultLocale(englishLocale);\n\t\t\t}\n\t\t}\n\n\t\t// Initialize axis object\n\t\tconst axis = axisFunction(scale)\n\t\t\t.tickSizeOuter(0)\n\t\t\t.tickFormat(Tools.getProperty(axisOptions, \"ticks\", \"formatter\"));\n\n\t\tif (scale.ticks) {\n\t\t\tconst numberOfTicks = 7;\n\t\t\taxis.ticks(numberOfTicks);\n\n\t\t\tif (this.scaleType === ScaleTypes.TIME) {\n\t\t\t\tlet tickValues = scale.ticks(numberOfTicks).concat(scale.domain())\n\t\t\t\t\t.map(date => +date).sort();\n\t\t\t\ttickValues = Tools.removeArrayDuplicates(tickValues);\n\n\t\t\t\t// Remove labels on the edges\n\t\t\t\t// If there are more than 2 labels to show\n\t\t\t\tif (Tools.getProperty(options, \"timeScale\", \"addSpaceOnEdges\") && tickValues.length > 2) {\n\t\t\t\t\ttickValues.splice(tickValues.length - 1, 1);\n\t\t\t\t\ttickValues.splice(0, 1);\n\t\t\t\t}\n\n\t\t\t\taxis.tickValues(tickValues);\n\t\t\t}\n\t\t}\n\n\t\t// Add axis into the parent\n\t\tconst container = DOMUtils.appendOrSelect(svg, `g.axis.${axisPosition}`);\n\t\tconst axisRefExists = !container.select(`g.ticks`).empty();\n\t\tlet axisRef = DOMUtils.appendOrSelect(container, `g.ticks`);\n\n\t\t// Position and transition the axis\n\t\tswitch (axisPosition) {\n\t\t\tcase AxisPositions.LEFT:\n\t\t\t\taxisRef.attr(\"transform\", `translate(${this.margins.left}, 0)`);\n\t\t\t\tbreak;\n\t\t\tcase AxisPositions.BOTTOM:\n\t\t\t\taxisRef.attr(\"transform\", `translate(0, ${height - this.margins.bottom})`);\n\t\t\t\tbreak;\n\t\t\tcase AxisPositions.RIGHT:\n\t\t\t\taxisRef.attr(\"transform\", `translate(${width - this.margins.right}, 0)`);\n\t\t\t\tbreak;\n\t\t\tcase AxisPositions.TOP:\n\t\t\t\taxisRef.attr(\"transform\", `translate(0, ${this.margins.top})`);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Position the axis title\n\t\tif (axisOptions.title) {\n\t\t\tconst axisTitleRef = DOMUtils.appendOrSelect(container, `text.axis-title`)\n\t\t\t\t.text(axisOptions.title);\n\n\t\t\tswitch (axisPosition) {\n\t\t\t\tcase AxisPositions.LEFT:\n\t\t\t\t\taxisTitleRef.attr(\"transform\", \"rotate(-90)\")\n\t\t\t\t\t\t.attr(\"y\", 0)\n\t\t\t\t\t\t.attr(\"x\", -(scale.range()[0] / 2))\n\t\t\t\t\t\t.attr(\"dy\", \"1em\")\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase AxisPositions.BOTTOM:\n\t\t\t\t\taxisTitleRef.attr(\"transform\", `translate(${this.margins.left / 2 + scale.range()[1] / 2}, ${height})`)\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase AxisPositions.RIGHT:\n\t\t\t\t\taxisTitleRef.attr(\"transform\", \"rotate(90)\")\n\t\t\t\t\t\t.attr(\"y\", -width)\n\t\t\t\t\t\t.attr(\"x\", scale.range()[0] / 2)\n\t\t\t\t\t\t.attr(\"dy\", \"1em\")\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase AxisPositions.TOP:\n\t\t\t\t\tconst { height: titleHeight } = DOMUtils.getSVGElementSize(axisTitleRef, { useBBox: true });\n\t\t\t\t\taxisTitleRef.attr(\"transform\", `translate(${this.margins.left / 2 + scale.range()[1] / 2}, ${titleHeight / 2})`)\n\t\t\t\t\t\t.style(\"text-anchor\", \"middle\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Apply new axis to the axis element\n\t\tif (!animate || !axisRefExists) {\n\t\t\taxisRef = axisRef.call(axis);\n\t\t} else {\n\t\t\taxisRef = axisRef.transition(this.services.transitions.getTransition(\"axis-update\"))\n\t\t\t\t.call(axis);\n\t\t}\n\n\t\tif (axisPosition === AxisPositions.BOTTOM || axisPosition === AxisPositions.TOP) {\n\t\t\tif (scale.step) {\n\t\t\t\tconst textNodes = axisRef.selectAll(\"g.tick text\").nodes();\n\n\t\t\t\t// If any ticks are any larger than the scale step size\n\t\t\t\tif (textNodes.some(textNode => DOMUtils.getSVGElementSize(textNode, { useBBox: true }).width >= scale.step())) {\n\t\t\t\t\taxisRef.selectAll(\"g.tick text\")\n\t\t\t\t\t\t.attr(\"transform\", `rotate(45)`)\n\t\t\t\t\t\t.style(\"text-anchor\", axisPosition === AxisPositions.TOP ? \"end\" : \"start\");\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst estimatedTickSize = width / scale.ticks().length / 2;\n\n\t\t\t\tif (estimatedTickSize < 30) {\n\t\t\t\t\taxisRef.selectAll(\"g.tick text\")\n\t\t\t\t\t\t.attr(\"transform\", `rotate(45)`)\n\t\t\t\t\t\t.style(\"text-anchor\", axisPosition === AxisPositions.TOP ? \"end\" : \"start\");\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taxisRef.selectAll(\"g.tick text\")\n\t\t\t\t.attr(\"transform\", null)\n\t\t\t\t.style(\"text-anchor\", null);\n\t\t}\n\t}\n\n\tgetValueFromScale(datum: any, index?: number) {\n\t\tconst value = isNaN(datum) ? datum.value : datum;\n\t\tif (this.scaleType === ScaleTypes.LABELS) {\n\t\t\tconst correspondingLabel = this.model.getDisplayData().labels[index];\n\t\t\treturn this.scale(correspondingLabel) + this.scale.step() / 2;\n\t\t} else if (this.scaleType === ScaleTypes.TIME) {\n\t\t\treturn this.scale(new Date(datum.date || datum.label));\n\t\t}\n\n\t\treturn this.scale(value);\n\t}\n\n\tgetAxisRef() {\n\t\tconst { position: axisPosition } = this.configs;\n\n\t\treturn this.getContainerSVG()\n\t\t\t.select(`g.axis.${axisPosition} g.ticks`);\n\t}\n\n\tgetTitleRef() {\n\t\tconst { position: axisPosition } = this.configs;\n\n\t\treturn this.getContainerSVG()\n\t\t\t.select(`g.axis.${axisPosition} text.axis-title`);\n\t}\n}\n"]}