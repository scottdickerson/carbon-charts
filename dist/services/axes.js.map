{"version":3,"file":"axes.js","sourceRoot":"","sources":["axes.ts"],"names":[],"mappings":"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","sourcesContent":["// Internal Imports\nimport { Service } from \"./service\";\nimport { AxisPositions, AxisTypes, ScaleTypes } from \"../interfaces\";\n\nexport class Axes extends Service {\n\t// Find the main x-axis out of the 2 x-axis on the chart (when 2D axis is used)\n\tgetMainXAxis() {\n\t\tconst primaryAxis = this.model.get(AxisTypes.PRIMARY);\n\t\tconst secondaryAxis = this.model.get(AxisTypes.SECONDARY);\n\n\t\tif (primaryAxis === this.model.get(AxisPositions.TOP) || primaryAxis === this.model.get(AxisPositions.BOTTOM)) {\n\t\t\treturn primaryAxis;\n\t\t} else if (secondaryAxis === this.model.get(AxisPositions.TOP) || secondaryAxis === this.model.get(AxisPositions.BOTTOM)) {\n\t\t\treturn secondaryAxis;\n\t\t} else {\n\t\t\treturn this.model.get(AxisPositions.BOTTOM);\n\t\t}\n\t}\n\n\t// Find the main y-axis out of the 2 y-axis on the chart (when 2D axis is used)\n\tgetMainYAxis() {\n\t\tconst primaryAxis = this.model.get(AxisTypes.PRIMARY);\n\t\tconst secondaryAxis = this.model.get(AxisTypes.SECONDARY);\n\n\t\tif (primaryAxis === this.model.get(AxisPositions.LEFT) || primaryAxis === this.model.get(AxisPositions.RIGHT)) {\n\t\t\treturn primaryAxis;\n\t\t} else if (secondaryAxis === this.model.get(AxisPositions.LEFT) || secondaryAxis === this.model.get(AxisPositions.RIGHT)) {\n\t\t\treturn secondaryAxis;\n\t\t} else {\n\t\t\treturn this.model.get(AxisPositions.LEFT);\n\t\t}\n\t}\n\n\tgetXValue(d, i) {\n\t\treturn this.getMainXAxis().getValueFromScale(d, i);\n\t}\n\n\tgetYValue(d, i) {\n\t\treturn this.getMainYAxis().getValueFromScale(d, i);\n\t}\n\n\t/** Uses the primary Y Axis to get data items associated with that value.  */\n\tgetDataFromDomain(domainValue) {\n\t\tconst displayData = this.model.getDisplayData();\n\t\tconst activePoints = [];\n\t\tconst scaleType = this.getMainXAxis().scaleType;\n\n\t\tswitch (scaleType) {\n\t\t\tcase ScaleTypes.LABELS:\n\t\t\t\t// based on labels we use the index to get the associated data\n\t\t\t\tconst index = displayData.labels.indexOf(domainValue);\n\n\t\t\t\tdisplayData.datasets.forEach(dataset => {\n\t\t\t\t\tactivePoints.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\t\tvalue: dataset.data[index],\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase ScaleTypes.TIME:\n\t\t\t\t// time series we filter using the date\n\t\t\t\tconst domainKey = Object.keys(displayData.datasets[0].data[0]).filter(key =>  key !== \"value\" )[0];\n\n\t\t\t\tdisplayData.datasets.forEach(dataset => {\n\t\t\t\t\tconst sharedLabel = dataset.label;\n\n\t\t\t\t\t// filter the items in each dataset for the points associated with the Domain\n\t\t\t\t\tconst dataItems = dataset.data.filter(item => {\n\t\t\t\t\t\tconst date1 = new Date(item[domainKey]);\n\t\t\t\t\t\tconst date2 = new Date(domainValue);\n\t\t\t\t\t\treturn date1.getTime() === date2.getTime();\n\t\t\t\t\t});\n\n\t\t\t\t\t// assign the shared label on the data items and add them to the array\n\t\t\t\t\tdataItems.forEach(item => {\n\t\t\t\t\t\tactivePoints.push(\n\t\t\t\t\t\t\tObject.assign({datasetLabel: sharedLabel,\n\t\t\t\t\t\t\t\tvalue: item.value,\n\t\t\t\t\t\t\t}, item)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t\treturn activePoints;\n\t}\n}\n"]}