{"version":3,"file":"test-environment.js","sourceRoot":"","sources":["test-environment.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,EAAE,iBAAiB,EAAE,MAAM,SAAS,CAAC;AAE5C,MAAM,CAAC,IAAM,IAAI,GAAG;IACnB,MAAM,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,CAAC;IACrD,QAAQ,EAAE;QACT;YACC,KAAK,EAAE,WAAW;YAClB,UAAU,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,EAAE;gBACL,IAAI;gBACJ,IAAI;gBACJ,IAAI;gBACJ,IAAI;gBACJ,KAAK;aACL;SACD;QACD;YACC,KAAK,EAAE,WAAW;YAClB,UAAU,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,EAAE;gBACL,CAAC;gBACD,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;aACL;SACD;QACD;YACC,KAAK,EAAE,WAAW;YAClB,UAAU,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,EAAE;gBACL,CAAC;gBACD,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;aACL;SACD;KACD;CACD,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,GAAG;IACtB,IAAI,EAAE;QACL,MAAM,EAAE;YACP,KAAK,EAAE,2BAA2B;YAClC,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,IAAI;SACb;QACD,IAAI,EAAE;YACL,SAAS,EAAE,IAAI;SACf;QACD,GAAG,EAAE;YACJ,KAAK,EAAE,eAAe;SACtB;KACD;IACD,eAAe,EAAE,IAAI;IACrB,SAAS,EAAE,IAAI;IACf,MAAM,EAAE,GAAG;IACX,KAAK,EAAE,UAAU;CACjB,CAAC;AAEF;IAAA;QACC,iBAAY,GAAG,OAAO,CAAC;QACvB,cAAS,GAAG,IAAI,CAAC;IA0BlB,CAAC;IAvBA,gCAAM,GAAN;QACC,IAAM,MAAM,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAE5C,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,YAAY,CACnC,MAAM,EACN;YACC,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,OAAO,EAAE,IAAI,CAAC,YAAY;SAC1B,CACD,CAAC;IACH,CAAC;IAED,iCAAO,GAAP;QACC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;IACtB,CAAC;IAED,yCAAe,GAAf,UAAgB,IAAc;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;IAED,2CAAiB,GAAjB;QACC,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IACF,sBAAC;AAAD,CAAC,AA5BD,IA4BC","sourcesContent":["import { Chart } from \"../chart\";\n\nimport * as Charts from \"../index\";\nimport { createChartHolder } from \"./tools\";\n\nexport const data = {\n\tlabels: [\"Qty\", \"More\", \"Sold\", \"Restocking\", \"Misc\"],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: \"Dataset 1\",\n\t\t\tfillColors: [Charts.defaultColors[0]],\n\t\t\tdata: [\n\t\t\t\t2000,\n\t\t\t\t4200,\n\t\t\t\t7000,\n\t\t\t\t4000,\n\t\t\t\t19000\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: \"Dataset 2\",\n\t\t\tfillColors: [Charts.defaultColors[1]],\n\t\t\tdata: [\n\t\t\t\t0,\n\t\t\t\t10000,\n\t\t\t\t20000,\n\t\t\t\t30000,\n\t\t\t\t40000\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tlabel: \"Dataset 3\",\n\t\t\tfillColors: [Charts.defaultColors[2]],\n\t\t\tdata: [\n\t\t\t\t0,\n\t\t\t\t20000,\n\t\t\t\t40000,\n\t\t\t\t60000,\n\t\t\t\t80000\n\t\t\t]\n\t\t}\n\t]\n};\n\nexport const options = {\n\taxes: {\n\t\tbottom: {\n\t\t\ttitle: \"2018 Annual Sales Figures\",\n\t\t\ttype: \"labels\",\n\t\t\tprimary: true\n\t\t},\n\t\tleft: {\n\t\t\tsecondary: true\n\t\t},\n\t\ttop: {\n\t\t\ttitle: \"Dollars (CAD)\"\n\t\t}\n\t},\n\tlegendClickable: true,\n\tresizable: true,\n\theight: 500,\n\ttitle: \"My chart\"\n};\n\nexport class TestEnvironment {\n\tchartOptions = options;\n\tchartData = data;\n\tchart: Chart;\n\n\trender() {\n\t\tconst holder = createChartHolder(\"scatter\");\n\n\t\tthis.chart = new Charts.ScatterChart(\n\t\t\tholder,\n\t\t\t{\n\t\t\t\tdata: this.chartData,\n\t\t\t\toptions: this.chartOptions\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroy() {\n\t\tthis.chart.destroy();\n\t}\n\n\tsetChartOptions(func: Function) {\n\t\tthis.chartOptions = func(this.chartOptions);\n\t}\n\n\tgetChartReference() {\n\t\treturn this.chart;\n\t}\n}\n"]}